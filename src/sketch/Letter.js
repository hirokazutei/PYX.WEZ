// Even better, turned them into organic x/y co-ordinates with Ruby
// # zipped = letters.map{|letter, cord| [letter, cord[0].zip(cord[1]) ] }.to_h

export default {
  "a": [
    [0, 20],
    [0, 30],
    [0, 40],
    [0, 50],
    [0, 60],
    [10, 10],
    [10, 40],
    [20, 0],
    [20, 40],
    [30, 10],
    [30, 40],
    [40, 20],
    [40, 30],
    [40, 40],
    [40, 50],
    [40, 60]
  ],
  "b": [
    [0, 0],
    [0, 10],
    [0, 20],
    [0, 30],
    [0, 40],
    [0, 50],
    [0, 60],
    [10, 0],
    [10, 30],
    [10, 60],
    [20, 0],
    [20, 30],
    [20, 60],
    [30, 0],
    [30, 30],
    [30, 60],
    [40, 10],
    [40, 20],
    [40, 40],
    [40, 50]
  ],
  "c": [
    [0, 10],
    [0, 20],
    [0, 30],
    [0, 40],
    [0, 50],
    [10, 0],
    [10, 60],
    [20, 0],
    [20, 60],
    [30, 0],
    [30, 60],
    [40, 10],
    [40, 50]
  ],
  "d": [
    [0, 0],
    [0, 10],
    [0, 20],
    [0, 30],
    [0, 40],
    [0, 50],
    [0, 60],
    [10, 0],
    [10, 60],
    [20, 0],
    [20, 60],
    [30, 0],
    [30, 60],
    [40, 10],
    [40, 20],
    [40, 30],
    [40, 40],
    [40, 50]
  ],
  "e": [
    [0, 0],
    [0, 10],
    [0, 20],
    [0, 30],
    [0, 40],
    [0, 50],
    [0, 60],
    [10, 0],
    [10, 30],
    [10, 60],
    [20, 0],
    [20, 30],
    [20, 60],
    [30, 0],
    [30, 30],
    [30, 60],
    [40, 0],
    [40, 60]
  ],
  "f": [
    [0, 0],
    [0, 10],
    [0, 20],
    [0, 30],
    [0, 40],
    [0, 50],
    [0, 60],
    [10, 0],
    [10, 30],
    [20, 0],
    [20, 30],
    [30, 0],
    [30, 30],
    [40, 0]
  ],
  "g": [
    [0, 10],
    [0, 20],
    [0, 30],
    [0, 40],
    [0, 50],
    [10, 0],
    [10, 60],
    [20, 0],
    [20, 60],
    [30, 0],
    [30, 40],
    [30, 60],
    [40, 10],
    [40, 40],
    [40, 50]
  ],
  "h": [
    [0, 0],
    [0, 10],
    [0, 20],
    [0, 30],
    [0, 40],
    [0, 50],
    [0, 60],
    [10, 30],
    [20, 30],
    [30, 30],
    [40, 0],
    [40, 10],
    [40, 20],
    [40, 30],
    [40, 40],
    [40, 50],
    [40, 60]
  ],
  "i": [
    [10, 0],
    [10, 60],
    [20, 0],
    [20, 10],
    [20, 20],
    [20, 30],
    [20, 40],
    [20, 50],
    [20, 60],
    [30, 0],
    [30, 60]
  ],
  "j": [
    [0, 50],
    [10, 60],
    [20, 60],
    [30, 60],
    [40, 0],
    [40, 10],
    [40, 20],
    [40, 30],
    [40, 40],
    [40, 50]
  ],
  "k": [
    [0, 0],
    [0, 10],
    [0, 20],
    [0, 30],
    [0, 40],
    [0, 50],
    [0, 60],
    [10, 30],
    [20, 20],
    [20, 40],
    [30, 10],
    [30, 50],
    [40, 0],
    [40, 60]
  ],
  "l": [
    [0, 0],
    [0, 10],
    [0, 20],
    [0, 30],
    [0, 40],
    [0, 50],
    [0, 60],
    [10, 60],
    [20, 60],
    [30, 60],
    [40, 60]
  ],
  "m": [
    [0, 0],
    [0, 10],
    [0, 20],
    [0, 30],
    [0, 40],
    [0, 50],
    [0, 60],
    [10, 10],
    [20, 20],
    [30, 10],
    [40, 0],
    [40, 10],
    [40, 20],
    [40, 30],
    [40, 40],
    [40, 50],
    [40, 60]
  ],
  "n": [
    [0, 0],
    [0, 10],
    [0, 20],
    [0, 30],
    [0, 40],
    [0, 50],
    [0, 60],
    [10, 10],
    [10, 20],
    [20, 30],
    [30, 40],
    [30, 50],
    [40, 0],
    [40, 10],
    [40, 20],
    [40, 30],
    [40, 40],
    [40, 50],
    [40, 60]
  ],
  "o": [
    [0, 10],
    [0, 20],
    [0, 30],
    [0, 40],
    [0, 50],
    [10, 0],
    [10, 60],
    [20, 0],
    [20, 60],
    [30, 0],
    [30, 60],
    [40, 10],
    [40, 20],
    [40, 30],
    [40, 40],
    [40, 50]
  ],
  "p": [
    [0, 0],
    [0, 10],
    [0, 20],
    [0, 30],
    [0, 40],
    [0, 50],
    [0, 60],
    [10, 0],
    [10, 30],
    [20, 0],
    [20, 30],
    [30, 0],
    [30, 30],
    [40, 10],
    [40, 20]
  ],
  "q": [
    [0, 10],
    [0, 20],
    [0, 30],
    [0, 40],
    [0, 50],
    [10, 0],
    [10, 60],
    [20, 0],
    [20, 40],
    [20, 60],
    [30, 0],
    [30, 50],
    [40, 10],
    [40, 20],
    [40, 30],
    [40, 40],
    [40, 60]
  ],
  "r": [
    [0, 0],
    [0, 10],
    [0, 20],
    [0, 30],
    [0, 40],
    [0, 50],
    [0, 60],
    [10, 0],
    [10, 30],
    [20, 0],
    [20, 30],
    [20, 40],
    [30, 0],
    [30, 30],
    [30, 50],
    [40, 10],
    [40, 20],
    [40, 60]
  ],
  "s": [
    [0, 10],
    [0, 20],
    [0, 50],
    [10, 0],
    [10, 30],
    [10, 60],
    [20, 0],
    [20, 30],
    [20, 60],
    [30, 0],
    [30, 30],
    [30, 60],
    [40, 10],
    [40, 40],
    [40, 50]
  ],
  "t": [
    [0, 0],
    [10, 0],
    [20, 0],
    [20, 10],
    [20, 20],
    [20, 30],
    [20, 40],
    [20, 50],
    [20, 60],
    [30, 0],
    [40, 0]
  ],
  "u": [
    [0, 0],
    [0, 10],
    [0, 20],
    [0, 30],
    [0, 40],
    [0, 50],
    [10, 60],
    [20, 60],
    [30, 60],
    [40, 0],
    [40, 10],
    [40, 20],
    [40, 30],
    [40, 40],
    [40, 50]
  ],
  "v": [
    [0, 0],
    [0, 10],
    [0, 20],
    [0, 30],
    [10, 40],
    [10, 50],
    [20, 60],
    [30, 50],
    [30, 40],
    [40, 30],
    [40, 20],
    [40, 10],
    [40, 0]
  ],
  "w": [
    [0, 0],
    [0, 10],
    [0, 20],
    [0, 30],
    [0, 40],
    [0, 50],
    [0, 60],
    [10, 50],
    [20, 40],
    [30, 50],
    [40, 0],
    [40, 10],
    [40, 20],
    [40, 30],
    [40, 40],
    [40, 50],
    [40, 60]
  ],
  "x": [
    [0, 0],
    [0, 10],
    [0, 50],
    [0, 60],
    [10, 20],
    [10, 40],
    [20, 30],
    [30, 20],
    [30, 40],
    [40, 0],
    [40, 10],
    [40, 50],
    [40, 60]
  ],
  "y": [
    [0, 0],
    [0, 10],
    [0, 20],
    [10, 30],
    [20, 40],
    [20, 50],
    [20, 60],
    [30, 30],
    [40, 20],
    [40, 10],
    [40, 0]
  ],
  "z": [
    [0, 0],
    [0, 50],
    [0, 60],
    [10, 0],
    [10, 40],
    [10, 60],
    [20, 0],
    [20, 30],
    [20, 60],
    [30, 0],
    [30, 20],
    [30, 60],
    [40, 0],
    [40, 10],
    [40, 60]
  ]
}
